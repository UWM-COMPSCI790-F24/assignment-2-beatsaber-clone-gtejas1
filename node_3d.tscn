[gd_scene load_steps=15 format=3 uid="uid://dkeev3kdi3pty"]

[ext_resource type="Script" path="res://LineRenderer.gd" id="1_vu3rf"]
[ext_resource type="PackedScene" uid="uid://cnwp7ndjr4s8y" path="res://Quest2Controllers/OculusQuest2TouchController_Left.gltf" id="3_2wpmc"]
[ext_resource type="PackedScene" uid="uid://bc8lh0rihgxvi" path="res://Quest2Controllers/OculusQuest2TouchController_Right.gltf" id="4_6wahc"]
[ext_resource type="AudioStream" uid="uid://dej8lum1jlx36" path="res://sword-slash-and-swing.mp3" id="5_33crx"]
[ext_resource type="Script" path="res://CubeSpawner.gd" id="5_tbitg"]

[sub_resource type="GDScript" id="GDScript_oagiv"]
script/source = "extends Node3D
var xr_interface: XRInterface
@export var cube_scene: PackedScene # Drag the Cube.tscn file into this variable
@export var spawn_interval = 2.0  # Time between spawning cubes
var spawn_timer = 0.0
@export var break_force: float = 10
@export var number_of_pieces: int = 4

func _ready():
	xr_interface = XRServer.find_interface(\"OpenXR\")
	if xr_interface and xr_interface.is_initialized():
		#xr_interface.connect(\"pose_recentered\", Callable(self, \"_on_pose_recentered\"))
		print(\"OpenXR initialized successfully\")

		# Turn off v-sync!
		DisplayServer.window_set_vsync_mode(DisplayServer.VSYNC_DISABLED)

		# Change our main viewport to output to the HMD
		get_viewport().use_xr = true
	else:
		print(\"OpenXR not initialized, please check if your headset is connected\")

func spawn_cube():
	# Create a new instance of the cube
	var cube_instance = cube_scene.instantiate()
	add_child(cube_instance)
	
func _process(delta):
	# Count down the spawn timer
	#var right_sword = $XROrigin3D/RightController/MeshInstance3D
	var right_raycast = $XROrigin3D/RightController/MeshInstance3D/RayCast3D
	#var left_sword = $XROrigin3D/LeftController/MeshInstance3D
	var left_raycast = $XROrigin3D/LeftController/MeshInstance3D/RayCast3D
	
	spawn_timer -= delta
	if spawn_timer <= 0:
		# Spawn a cube when the timer reaches 0
		spawn_cube()
		spawn_timer = spawn_interval  # Reset the timer
	
	
	
	var red = Color(1, 0, 0)
	var blue = Color(0, 0, 1)
	var leftcollider = left_raycast.get_collider()
	if leftcollider != null:  # Check if collider is not null
		#print(\"Left sword hit: \", leftcollider.name)
		if leftcollider.get_color() == red:
			$AudioStreamPlayer3D.play()
			leftcollider.queue_free()
			
	
		
	var rightcollider = right_raycast.get_collider()
	if rightcollider != null:  # Check if collider is not null
		#print(\"Right sword hit: \", rightcollider.name)
		if rightcollider.get_color() == blue:
			$AudioStreamPlayer3D.play()
			rightcollider.queue_free()


func _on_left_controller_button_pressed(name: String) -> void:
	if name == \"ax_button\":
		#print(\"Toggle Left!\")
		$XROrigin3D/LeftController/MeshInstance3D.visible = true


func _on_right_controller_button_pressed(name: String) -> void:
	if name == \"ax_button\":
		#print(\"Pressed Right!\")
		$XROrigin3D/RightController/MeshInstance3D.visible = true
		
	if name == \"by_button\":
		XRServer.center_on_hmd(XRServer.RESET_BUT_KEEP_TILT, true)

func _on_right_controller_button_released(name: String) -> void:
	if name == \"ax_button\":
		#print(\"Released Right!\")
		$XROrigin3D/RightController/MeshInstance3D.visible = false


func _on_left_controller_button_released(name: String) -> void:
	if name == \"ax_button\":
		#print(\"Released Left!\")
		$XROrigin3D/LeftController/MeshInstance3D.visible = false

#func _on_pose_recentered():
	#var cube_instance = $CSGBox3D
	#recenter_player_to_cube(cube_instance)
#
#func recenter_player_to_cube(cube):
	#if cube:
		#var player = $XROrigin3D  # Adjust the path to your ARVR Origin node
		#var direction = (cube.global_transform.origin - player.global_transform.origin).normalized()
		#player.global_transform.origin = cube.global_transform.origin - direction * 2.0  # Place the player 2 meters away from the cube
		#player.look_at(cube.global_transform.origin, Vector3.UP)  # Ensure the player faces the cube
"

[sub_resource type="PackedScene" id="PackedScene_v7jd4"]
_bundled = {
"conn_count": 0,
"conns": PackedInt32Array(),
"editable_instances": [],
"names": PackedStringArray("Node3D", "CSGBox3D", "use_collision", "size", "script"),
"node_count": 2,
"node_paths": [],
"nodes": PackedInt32Array(-1, -1, 0, 0, -1, 0, 0, 0, 0, 1, 1, -1, 3, 2, 0, 3, 1, 4, 2, 0),
"variants": [true, Vector3(0.2, 0.2, 0.2), ExtResource("5_tbitg")],
"version": 3
}

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_l07w3"]
sky_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)
ground_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)

[sub_resource type="Sky" id="Sky_ipnnj"]
sky_material = SubResource("ProceduralSkyMaterial_l07w3")

[sub_resource type="Environment" id="Environment_qi6mc"]
background_mode = 2
sky = SubResource("Sky_ipnnj")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_e5hx5"]
albedo_color = Color(1, 0, 0, 0.513726)
emission_enabled = true
emission = Color(1, 0, 0, 1)

[sub_resource type="ImmediateMesh" id="ImmediateMesh_8djcn"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ya0n7"]
albedo_color = Color(0, 0, 1, 0.576471)

[sub_resource type="ImmediateMesh" id="ImmediateMesh_wojty"]

[node name="Node3D" type="Node3D"]
script = SubResource("GDScript_oagiv")
cube_scene = SubResource("PackedScene_v7jd4")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_qi6mc")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.866023, -0.433016, 0.250001, 0, 0.499998, 0.866027, -0.500003, 0.749999, -0.43301, 0, 0, 0)
shadow_enabled = true

[node name="XROrigin3D" type="XROrigin3D" parent="."]
transform = Transform3D(-1, 0, 8.74228e-08, 0, 1, 0, -8.74228e-08, 0, -1, 0, 0, 0)

[node name="XRCamera3D" type="XRCamera3D" parent="XROrigin3D"]

[node name="LeftController" type="XRController3D" parent="XROrigin3D"]
tracker = &"left_hand"

[node name="MeshInstance3D" type="MeshInstance3D" parent="XROrigin3D/LeftController"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.187916, 0)
material_override = SubResource("StandardMaterial3D_e5hx5")
mesh = SubResource("ImmediateMesh_8djcn")
script = ExtResource("1_vu3rf")

[node name="RayCast3D" type="RayCast3D" parent="XROrigin3D/LeftController/MeshInstance3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.187916, 0)
target_position = Vector3(0, 0, -2)

[node name="OculusQuest2TouchController_Left" parent="XROrigin3D/LeftController" instance=ExtResource("3_2wpmc")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)

[node name="RightController" type="XRController3D" parent="XROrigin3D"]
tracker = &"right_hand"

[node name="MeshInstance3D" type="MeshInstance3D" parent="XROrigin3D/RightController"]
material_override = SubResource("StandardMaterial3D_ya0n7")
mesh = SubResource("ImmediateMesh_wojty")
script = ExtResource("1_vu3rf")

[node name="RayCast3D" type="RayCast3D" parent="XROrigin3D/RightController/MeshInstance3D"]
target_position = Vector3(0, 0, -2)

[node name="OculusQuest2TouchController_Right" parent="XROrigin3D/RightController" instance=ExtResource("4_6wahc")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)

[node name="CSGBox3D" type="CSGBox3D" parent="."]
script = ExtResource("5_tbitg")

[node name="AudioStreamPlayer3D" type="AudioStreamPlayer3D" parent="."]
stream = ExtResource("5_33crx")

[connection signal="button_pressed" from="XROrigin3D/LeftController" to="." method="_on_left_controller_button_pressed"]
[connection signal="button_released" from="XROrigin3D/LeftController" to="." method="_on_left_controller_button_released"]
[connection signal="button_pressed" from="XROrigin3D/RightController" to="." method="_on_right_controller_button_pressed"]
[connection signal="button_released" from="XROrigin3D/RightController" to="." method="_on_right_controller_button_released"]
